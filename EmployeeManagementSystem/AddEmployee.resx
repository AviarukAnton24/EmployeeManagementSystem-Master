<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAuGwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAAGuBJREFUeJztnXmQFFWex7sBRWBERgPpdSbW0dCIGWfXCP/YMGYn1thw
        T2dn/hhjZ8eNdTdm/5lZdTkEAZvupmkuURfHa3EFlOboi76b7q4+QO6ruekG5JBL7hvk0n9+my+rsvpl
        VmZWVlVmvZf1vhXxCbUtmnrv/b6f915mVmZensDXhC9OEACqIzKDWX2J7mgAwoDonPr+Et2hAIQR0bnN
        6CW68wDIJUTnOaWX6M4CIBcRneukL9EdBIAKiM55wkt0hwCgIqJzr79EdwIAKpMz4c8ragdAGUItAYQe
        AP8IlQgQegCCQ2oJIPgAZAfpJIDgA5B9pJAAgg+AWIRKAOEHQDxCBIDwAyAPWZUAgg+AnAQuAYQfALkJ
        VAIIPwDyE4gAMPsDEA4CWQUg/ACEB18FgPADED58kQDCD0B4yVgCEAAA4SUrAhDdSACAM2kLALM/AOEn
        7VUAwg9AbpCyADD7A5A7pLwKQPgByC0gAAAUBgIAQGE8CwDhByA38ZRtCACA3AQCAEBhfBGA6EYAANIH
        AvCDKW3eEP05AbAAAaSD18BDCEByIAAXBmj87JON9PqKXlq07TitOXKeek9foSMXrtHB81dpx8nLtGLf
        afpgw2F6uWYHPfp2txbsVhcgAyAXEIANo2Z1U3Hnfj3gJy5/kxJMCP+8rIcGTllBeYUcXoUgQfuBOkAA
        HENLIzSlYz8dOX8t5eBb2XD0Iv3tgo1mCTgKARIAYoAAYjzz0TradPxSxsG38uH6wzS0WAv1my1RXGUA
        EYDsAgFovFS1Q9/X+x1+g1WHztEjMyOaAJpjOMjATgQS9A/IXZQXwCtNewILPk/P8Yv0o7c6KG9yk0az
        WQaQABCE0gL4l8rtWQm/wfqvLtBD07RwT2qMiYCXgZ0IIAEQLMoK4OkP1/pysC9Vqncep/yJ9ZQ3sUET
        QQMkAISipACGTI3QhmMXsx5+g9ENOyjvjTpNAoYIGjkRQAIgeygpgMnt+4SFn3Hw3FX64XQt3BPq+kXg
        thqABEBAKCeAkbO66ZCApb+V99d8SXnjl2sdXGuWgL4agARAdlBOAJMjYmd/g68uXKcflDaZJaCLwCIB
        p7MDEvQlCD9KCSBfo+eE/xf7pMuYum2U93q1Rk1MBHYSwCoABIdSAnh23gbhoefp2HeK8sZVJEqAPybg
        thWQoE9BuFFKAGNbeoWHnufYxes0YnJNogSsBwaxFQABoZQAFm49Jjz0Vv7q/Q7KG7vMLIH4gUEPWwEJ
        +hWEF6UEsOrQeeGBt/Ly4nWUN2ZpTAKVUQnwxwPstgJYBQCfUEoAu0+l/v3+oBlbu4XyRi+JSYCtAqr6
        JYBVAAgYdQSgBUWG8/9WCpu3awJYHBUAw9gK8KcHHY8FQAAgM5QSwP6zV4UH3srEhq2U99/l/RKwbgWc
        VgHYBgAfUEoAPQHc8CNTXqneRHmvLdIk4LQKMM4IYBsA/EcpATT0nhIeeCu/mtcVE0C5zbGAGmwDQKCo
        IYBYSN5Zc0h44K38ZHodJ4Ak2wAIAPiMUgL4TcU24YHn6T19mfJf+4zyXv3cfRvAHwdIOB0IAYD0UUoA
        D8/spKMXrgsPvsG8tfu18FsEYGwDvBwHgABAhiglABaYih0nhAff4O8+aLcIoDwNAUACIH2UE8DfLNgo
        PPiMdYfPUv6rC50FMBYCAMGjnADyCluobf9p4QL4zYJVlPcKBADEoqAAVtAzH67Rv4knKvxNu49Fw58g
        gHSOAbQi/CBtlBQAY0qkT0j4D5y9Qk9MXZ6aAFyvBsTsD9JHWQEM1LYCdbu/zroAXvx0ZX/4DQGw8POn
        AZNdBwABAJ9QTwCGBLQQjSht0x/bla3wj1u+OTH8pv0/JwDrlYC4EAgEgBoCYFhXAfrz+Zpp5PR26jxw
        JvDwT6jbYg5/yvt/QwD4LgDwD3UFoEugWQ/V8JIWKu85GkjwD527Sv/62RdJwp/sMmB8GQgEg+ICaImG
        ioVrYh39vnY7fXnOv68MR/pO0lPsWn+38Ftnf7svAmH/DwJCQQEkbgP0cLGQaWH7QVkLvbf6QEbPDdx8
        9Dz9+6LV0Qt9PIXfYfY3Lf8x+wP/UUcAjKSrgProjKuF70+mNtLouh791t1erhnoO32Z5m84QC98FKGB
        7As+tsG3hr/c5m5ANrM/lv8gINQVgMsqQA8fm4HZTKzNyOzW3T//Y4T+rXwtjVm+hSY3baMJ9VvpD1Ub
        9e/zs2V+9Ft9bnzuPPM73g/Q7dbgCD/IHLUEwEi6CuAkwGZiXQIV0eU5Cyrbq7PgsgAbYWYYAbeDfx+b
        9e3C7/WOwBAA8BG1BWC3CmCh47YCthIwRMCCrAe63BxyO/jgGwf8bMOfwtIfAgAZop4AGG6rAF4CE6wS
        qIwG1givdUXAC8EIvEFC8Jdxe36n8ON5ACBYIAC3rYDdSoAFVl8NWEQQl4EN/HtY8OOzvl348VxAkD3U
        FADDUQLN/RLgtwP8gUFjNWCIgN8a2KGH3gg+N+vbPhXYQ/ghAOATEIB1K+AqgdhqgBeBviKIySAuhIr+
        sI+Lzfb8jB8Pfm0K4cfsD/xHXQEwnCQQPyjIHxOInR3gVwOmrUG1WQrxsPPYBb/eec9vF36VBWAaLx8R
        3S6BqC0AU1HZHA8wScByXMBYEfAyiAuhpj/sPHzw+Vk/frTfEn6Vl/6x9uZrfH96BxXM6qLH3llFT723
        mv78/TX05Nwv6E/nrKRRM7tohPb/8yGFtIAArKuABAnwpwgb+1cDvAjiMogJwUSdJfT1luA3ZS/8Qc2g
        PgTowRld9NfzN9GYlr300YYjVL/3FG0+fom+8ngXZ/Y+9uSnln2n9MfAT+s+QL+t3EZPv7+aBhdzY2uL
        ujKAABKCYT0e0GK/GoiLwEYGVvTQ88H3Gv4MBZDNwKcohXtL2vXAz1x1kDYcvRjoV7HZreC7D57TpfD8
        go00pKTNoa89SEF0rUIAftBG/1S+lWZ9cZDeX384OesOJWdtErT3vKf9842WPfT4nM7E8KcpgAEav17a
        Q7O/0P4ObebU8dKmDPijBgvTr5dspXuKnGZX+wD9xcfr6EPtM4p8UCv7ohe7PfyL2ucfUmyRga0QclcG
        yglgUHE7Ldp2XFjxMQ5rBfiLzzfFwm8z+zsJwFJ0Q0oj1LBX7PMOF/YcSxqggUWt9FLldur88qzQz2pH
        35kr9M7qg/TjuasS22HbntwSgXICGN/aK7zoGAfPXaVHZkacVwAeJFCqzcKi28H40dvdDuFpoV8s2kxr
        j1wQ/hmTwb7xOX/LUXqKiSDpeLiLOUwoJ4AtEj0i/A/1u7htQApbgVjB9ZyQoy0vLtli/vwaT7yzkpok
        fBqzF+ZtPKLfKi4TOYcF5QQg8nkAVqZ17YsdC4gdD0h6TMBcbLK0pTjSx7WjiX5ft4sOZXBDFRlgD259
        uaqHuzYj/a2azCgnANGFxVPGBJBwStD7aUHRn9/gk01H9DaMmLqCqnbK8+xFP6jccYIenNbmPi4hvmAL
        AhAqgD6H04QOVwVaJCD68xss3HyEHpvVru31zwv/LEGw+dhF+rO53dk5dQsBKCSAzl6bqwO9XhrcKvzz
        G2w6doH2nros/HMECTto+8LCDeldwCWxCNQSgESzpi6Ajl7zJcPGV4Ld7gnASUD051cNdv3ACwvWp3AJ
        t/yrAQhAqAD2mr80FBeBVQI2RQYBCJPAP3y6NnGl5jBGsksAAhApgMgeb/cIiBeYeZYR/flVhV3I9fT/
        dJpv4OIiapkloI4AJDtwxtAFkHCXIE4CbncGhgCEwo57jChqDP1XuiEAgZS17/Z+g1CbwhL9+VVncc9X
        2jjVhPqmLhCAQMrad5kfC+b4fAD7OwSL/vzgG/pt+cYU7+kolwQgAIGUte3ibhe+xHK3YKfHgzVDABKx
        48QlGl5Yl96NXSWQAAQgEF0ApmcG8I8HtzwizKagRH9+EGUaO5aT7t2dBUsAAhBIWdtO708IhgCkhd2N
        6JGSBu/Pd7BKAAJQWADGo8P4B4XGnxLs/ohw0Z8f9FO0YpeHJzxZn+8oXgIQgECiAvjMvAqwe0w4BCA9
        7NuDwybW2D/jUeInPEMAAokLIL4KgADCzO+WbbR/0KvT8QAJVgEQgEAcBaAfCHQQwGQIQFZqdx5LPIZj
        uqBLvlUABCAQCCC3YHcffvDNGu5MTnXS4ziiJQABCMRdABUQQAh5adEa+22cy/UcEAAEkHgq0E4AliWk
        6M8PEpm/4aD76Vy7VYDAYwEQgEAggNyj5/gFy+lct6s6xW8DIACBQAC5SUFhdZqrgOxfHQgBCAQCyE3+
        8X87bS7qqpbyjAAEIBBVBbBdWyZ/vLqP/nPxGnpubis9XlxNI8YvocGjtX54ZaH+zwffWEo/KaujX87r
        pMKmHurc97Xwz+2V8XVbUru0GwKAAHJdAPqTd9YfoJ+/20L5ryzQg54UvW/6+emMOvq/9XI8DcmN91b2
        Olza7X5hFwQAAeSkADr6TtJPtdk877+SBN8SeL1fbPj7DyO074y8dyGu3v6V+3hOkGcbAAFAAIHybvce
        GvTqQvfwWwNvfDfChWffXaHfoFN0++zYcOQc9wUvL9sACAACyEEBzOnYrQV/vnP4+eBbQ67fIyF2nwQH
        Cpu3C2+jHUxMzt/wrLY/GwABQAC5JICGnUedZ36n4POBHx3rCwPjCkkD7WdDxy/Tz7uLbqsd944u93Z1
        JxtTgccBIAAIwHfYDPh4UbX38MfviLTYPuwujKnbKry9djwwfml6xwGyfFUgBAAB+E5xc4+38LsFP36r
        dJ7KGP0/e3Rao/D22vHwpAqbbQB/HECOqwIhAAjAVw6eu0IjJy51CL/drL/EIfSV5qcmOVJFbX3yXSPw
        KFsB2R0HkOx6AAgAAvCV97r3JM7+xszPh5+f9U0PRuGekMQ/N9EJ7T2zu/uEt9vKE6W17nd6kuRAIAQA
        AfjKz95pdp/9+RnR9IUZ66PRahOfnGyF/T/tPf9RsUV4u608yQSQyn0eIAAIIOwC2PP1Jcp/NZXw2zwO
        zelx6bbU6+959oNVwtueVABu4yrwikAIAALwDXZ9v/u+33J9fEL4LaE3HroZfwIvh/7z6Hsem90uvO0Z
        CcD2TAAEAAGETAC/W7zGZfa3Pv2ICz//MA3++XrGHZDiT93lMH6uvWdkmVzjmiiA8jROBUIAEEDIBPDM
        rAZvS3/b++Xxj9lu4kLf0o+xR+Z/pr1naHGr8LYnCmC5vQDGQgAQQI4KYNi4cg+zv93DT7nbZvPB5x6F
        7ogugSbhbbcXwGfO1wJ4vRgIAoAAwiCAHScuJi7/3WZ/64Mz+BueWsMfDwSHRQKi25+yAEwXA0EAEICr
        AKIzZL4WkgFakQzUimRQUSuduXaTzl67Reev36ILGhdv3KJL39ymyxpXbt6mazfv0PVbd+jG7Tv0ze27
        dPPOXbqlcfsu41u6o3H32yjfesB4L/tzt3Wiv4/93o2Hz9CI8YvpgdfLabj2z/tfX0Lf0xg2fikNGb+M
        7htfSYMnVNG9b9TQPW8sp0ET62jgpHoaoBV/Pj/zOwafu12WjQhEj2VmAmhwFkDAEoAAsszJK9/Q1xqn
        r96ktzp20eAxi2jI2MU0TAvL8AkVNGJSJT30Zg09XFRLBVMbqaC0iQrKVlDB9DaNdiqY0UEFMzupYFYn
        fffdd9LQ2XecCiYtjTJ5mUYFFbxZSQWFVfo98gqmLKeC4joqKIm1aVqL1p7WaLtmRLQ29beL8fCsLnpI
        ++8R0ztpeFkHDSvtoCFTIzS4JEL3FLfTwKI2GqBJMD8mAdHjCgHITsACYME+pYWazcpsRr504zZdvRmd
        edmMaRea+ev2uYclRAKo6TlkFkC8PRpTaqiACa24PmmbdGZ3aXSbeWtlFOvP2XtjfcH6mfU363fW/2wc
        2HiwcWHjI58AaoV/HwAC8BLuy9FZ+8zVWLi1JfY1bWnNlr+ZhCaXBLBk0wGH2b8q2p4iNvs3aG1is39z
        f5uM2d8U/q7E4FuxSCCVz8rGjY0fG0ddEtq4svE9CQGoKwBjBmd76os3/Am4SgL4jLUl5eV/ktnfKfwJ
        EkhNAF4FweqA1UM6KwjPAoh/IQgCyIoA9JlcWxZeuHFLP0jGDmSJCk0uCWC+kwDY8t+tPfze3+vsH7AA
        3GD1wuqG1Q+ro68dxAABCGZAcTvdUxKhIdM66IEZXTRqVrRYRAdFCQGwtvAC4Pf/SZf/HsMvSABOsLMj
        1/VVQ1QMP54GAWSNgVrYB0/toPvLOmnkLIfimQ0BZFUA1gOAnvf/4RSAlefebdL7YuSkCrp/wjIa/PpS
        GjhuGQTgR9jvK9Vm9enarO6lSCAAwQKwHgDkT/9lsP8PiQDs+mJUST09UFhP971Zr18LAQE4MCA2sw+f
        3kmjZqcQdghAoACczgAkOQCY6v7fNK7hEoDdamiUthoaXqrVe0kbDVD1OoBB2p59qLZnf2hmCgUAAUhB
        0rZ4EkCK4c8hAdithh6a0UVDSyN6LnJOAPlF0YN039P27Q9nOrtDAMLxLACnC4AggKTbIZYTlheWm/yw
        CcAIPDtQl/FyHgLIDQEknAJMVwByjWtQArDCcnR/hkIIVABs6TJsmsuReQgAAoAA/DkgqsFyxvKWypbB
        VwEMiB2h//7MLvGBD0GhKC2ATE8BSjyuogRgheWQ5ZHlMjABDIrt41M6JQcBqCcAa1sggMAFwMPyyXJq
        XR1kLADhwQ5xoUAAEEC2BGCFXUfDjh1AAGEKDQQQinENgwAMIIAwhQYCCMW4QgAyImGhQAAQAAQAAUAA
        EAAEAAFAABAABAABQAChH1cIQEYkLBQIAAKAACAACAACgAAgAAgAAoAAIAAIIPTjCgHIiISFAgFAABAA
        BAABQAAQAAQAAUAAEAAEAAGEflwhABmRsFAgAAgAAoAAIAAIAAKAACAACAACgAAggNCPKwQgIxIWCgQA
        AUAAEAAEAAFAABAABAABQAAQAAQQ+nGFAGREwkKBACAACAACgAAgAAgAAoAAIAAIAAKAAEI/rhCAjEhY
        KBAABAABQAAQAAQAAUAAEAAEAAFAABBA6McVApARCQsFAoAAIAAIAAKAACAACAACgAAgAAgAAgj9uEIA
        MiJhoUAAEAAEAAFAABAABAABQAAQAAQAAUAAoR9XCEBGJCwUCAACgAAgAHNoptS4hyZMAkjWFggAAoAA
        nEJTn0MCcGgLBAABZFsAd+7eFV4cBvNW92YkgDt35GnLJ+m0xUcByDSujL98u9GbAKa3QgDZFMD+s9eE
        F4fBpLpN/UXCh6ao1j00sUI5dF6ethQ2bkmvLT4JQKa+uHHrNj1WVGU5HmIngBYIINsCGNeyV3iBME5e
        vEZPllQnD41pmWgWQFHHPuHtYJy/doOeKlueXlt8EsAUSfqC8fGqPc4HRA0BlPICMB/cjfYFBBCIAFjH
        zl17iO4KXDKe0ML//NwWmyIxZgkjNNZ9olkAjE83HxVa7GeuXKdfftyeflt8EkDBbPF9wajddph+WFiR
        KEP+jEhJIwQgUgCsk5/7ZB2VdO6jOav205yVDO3fu/toTlcvzencq7FHY7fGLprTwdhJcyKMHWnzVvt2
        erViHT1eXGUOjNMs4UEAjOfnr6epWW7LbK0tr1Wu61/FpNsW3wTQJawvGNNXbKNffRyJ9YWdDGtSFEDw
        4VdaADqsAFkhsoJkhckGhS1V2YzFZi42YKyQ2QAaxc0GdnIFN9DpYg1MsiJxFoD+3zPC1haf9rwyjqtT
        fzgdD4EAJBEAm6HYTMVmLFa4rFDYwBmDyBdMQuF4xPrn47+72rxkdpwlOszhNwSQalusn0NIW7IkABF9
        YSdDrys7CCBbAojNnLqFW6MFygq1xDJbWCXgVDResf4uPTA2ReI2S7gJIGxtyWTP6ziuAvrCsT8MGVpW
        Q35vhyCAdAXQbjNbNEYHzFQs1f1LR1/gwmIExjpjJtn/e2tLg9xtyaTgUx7XbPSFVYRG+K0y9Hk1BAF4
        KRSuWGyXzi39e8Z4sfAFEyuajFnOhSVWIEZgTEvEJMt/122AzG3xqeD5MZViXK39UceF30GGEEC2JeBh
        ttCLhVs2xgsmVjQ8/IA7Yf0zOnVcWBr6A2N38M9u+c+3I773dWpLo9i2uK1kMi34lMfVx76w7Y86S380
        cuHnZZhk+Q8BZEkA1v2zacbgCkYv7IZY4WSI8buM4oiHpdkcGKfZP75vDnlb/Ch4mcY1WX9Ywy9w9ldY
        AA6zRbxYuGWjMWvEi4Yrnoxo6i+MhLC0coFxmjG7nCUww6HwpW1LhgXveVyz2BfJ+sMx/BBAliSQLDhc
        wcSLJlY4BqVNqcP/eaMwjOJIKfwO7QhdW3xa7ooeV6f+SOgLPvxiZ3/FBdBtH5z4srGdK5hY0fCF4xfG
        743/Pe1JCsQSGk8SCEFbgh5X4X3hpT+yt/dXVwCeJRArmHjRWAvHT9rti8NT+JNIQIq2eBBZzo+rQ/AF
        Lf3VFoCpWJyC09lfvDN4Ij7D/W674HsKf8jbkpPjGrH0haD+gACSFYpLwZiKxlI8vmD53Xbn953Cnytt
        yclx9dAfpoO4YsKvtgBsC8bmqLoovATfS+GHsS1KjGuW+wMC8FosloLJRuHY/X12S3zV2hL2cfXaHwJr
        HwJwLJYkheM7Ln+/ym0J/bhK1h8QQKZFk0XQltwcV1n64y0IQK6iQVtyc1wl7g8IAACFgQAAUBgIAACF
        gQAAUBgIAACFgQAAUBgIAACFgQAAUBgIAACFgQAAUBgIAACFgQAAUJiMBQAJABBOvGQbAgAgR4EAAFAY
        TwJgLwgAgNzDU/i9CAASACBceJ79IQAAcg/fBQAJABAOvOY5j39BAADkBimHH6sAAHKDtGZ/rAIAyA3S
        Dj9WAQCEm4xmfwgAgHCTsQAgAQDCiS/hhwQACB++hj8VAUACAIgllax6FgBWAQCEg0DCj1UAAPIT2OwP
        CQAgN4GHPx0JQAQABEuqecwo/JAAAPIgJPzpCAASAMBf0smgbwJIVwIQAQCZkW7ufA1/phKACABIjUyy
        Fkj4/ZAARACAO5nmK9Dw+yUBiAAAM35kKivh91sEEAJQET+zk/XgByUBAEBqCA2/8RLdCQCoiOjcJ7xE
        dwgAKiA650lfojsIgFxEdK5TeonuLAByCdF5zugluvMACCOic+v7S3SHAhAGROc0ay/RHQ2ADIjM4P8D
        ai7swPolo+kAAAAASUVORK5CYII=
</value>
  </data>
</root>